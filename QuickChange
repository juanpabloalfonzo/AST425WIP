
values_flux_combined=[]
values_vel_combined=[]
values_ew_combined=[]
values_sigma_combined=[]
values_stellar_vel_combined=[]
values_stellar_sigma_combined=[]
for i in range(len(plateifu)):
    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    haflux = maps.emline_gflux_ha_6564
    values_flux = haflux.value
    ivar_flux = haflux.ivar
    mask_flux = haflux.mask
    #haflux.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    ha_vel = maps.emline_gvel_ha_6564
    values_vel = ha_vel.value
    ivar_vel = ha_vel.ivar
    mask_vel = ha_vel.mask
    #ha_vel.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    ha_sigma = maps.emline_sigma_ha_6564
    values_sigma = ha_sigma.value
    ivar_sigma = ha_sigma.ivar
    mask_sigma = ha_sigma.mask
    #ha_sigma.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    ha_ew = maps.emline_gew_ha_656len4
    values_ew = ha_vel.value
    ivar_ew = ha_vel.ivar
    mask_ew = ha_vel.mask
    #ha_ew.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    stellar_vel = maps.stellar_vel
    values_stellar_vel = stellar_vel.value
    ivar_stellar_vel = stellar_vel.ivar
    mask_stellar_vel = stellar_vel.mask
    #stellar_vel.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    stellar_sigma = maps.stellar_sigma
    values_stellar_sigma = stellar_sigma.value
    ivar_stellar_sigma = stellar_sigma.ivar
    mask_stellar_sigma = stellar_sigma.mask
    #stellar_vel.plot()

    values_flux_combined.append(values_flux.flatten())
    values_vel_combined.append(values_vel.flatten())
    values_ew_combined.append(values_ew.flatten())
    values_sigma_combined.append(values_sigma.flatten())
    values_stellar_vel_combined.append(values_stellar_vel.flatten())
    values_stellar_sigma_combined.append(values_stellar_sigma.flatten())

#Makes arrays to the appropriate size to fit the pixel maps of the different galaxies
ha_flux=np.zeros(len(plateifu))
ha_vel=np.zeros(len(plateifu))
ha_ew=np.zeros(len(plateifu))
ha_sigma=np.zeros(len(plateifu))
stellar_vel=np.zeros(len(plateifu))
stellar_sigma=np.zeros(len(plateifu))
for j_galaxy in range(len(plateifu)):
    ha_flux[j_galaxy]=len(values_flux_combined[j_galaxy])
    ha_vel[j_galaxy]=len(values_stellar_vel_combined[j_galaxy])
    ha_sigma[j_galaxy]=len(values_stellar_sigma_combined[j_galaxy])
    ha_ew[j_galaxy]=len(values_ew_combined[j_galaxy])
    stellar_vel[j_galaxy]=len(values_stellar_vel_combined[j_galaxy])
    stellar_sigma[j_galaxy]=len(values_stellar_sigma_combined[j_galaxy])

#Stores the data of each pixel for each galaxy of the same variable in 1D array, this will be fed to PCA
values_flux_combined1=np.zeros(int(sum(ha_flux)))
values_vel_combined1=np.zeros(int(sum(ha_vel)))
values_ew_combined1=np.zeros(int(sum(ha_ew)))
values_sigma_combined1=np.zeros(int(sum(ha_sigma)))
values_stellar_vel_combined1=np.zeros(int(sum(stellar_vel)))
values_stellar_sigma_combined1=np.zeros(int(sum(stellar_sigma)))
last_step=0
for i in range(len(plateifu)):
    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    haflux = maps.emline_gflux_ha_6564
    values_flux = haflux.value
    ivar_flux = haflux.ivar
    mask_flux = haflux.mask
    #haflux.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    ha_vel = maps.emline_gvel_ha_6564
    values_vel = ha_vel.value
    ivar_vel = ha_vel.ivar
    mask_vel = ha_vel.mask
    #ha_vel.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    ha_sigma = maps.emline_sigma_ha_6564
    values_sigma = ha_sigma.value
    ivar_sigma = ha_sigma.ivar
    mask_sigma = ha_sigma.mask
    #ha_sigma.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    ha_ew = maps.emline_gew_ha_6564
    values_ew = ha_vel.value
    ivar_ew = ha_vel.ivar
    mask_ew = ha_vel.mask
    #ha_ew.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    stellar_vel = maps.stellar_vel
    values_stellar_vel = stellar_vel.value
    ivar_stellar_vel = stellar_vel.ivar
    mask_stellar_vel = stellar_vel.mask
    #stellar_vel.plot()

    maps = Maps(plateifu=plateifu)
    print(maps)
    # get an emission line map
    stellar_sigma = maps.stellar_sigma
    values_stellar_sigma = stellar_sigma.value
    ivar_stellar_sigma = stellar_sigma.ivar
    mask_stellar_sigma = stellar_sigma.mask
    #stellar_vel.plot()
    if i==0:
        d=0
        f=np.size(values_flux)
    else:
        d=last_step
        f=last_step+np.size(values_flux)

    values_flux_combined1[d:f]=values_flux.flatten()
    values_vel_combined1[d:f]=values_vel.flatten()
    values_ew_combined1[d:f]=values_ew.flatten()
    values_sigma_combined1[d:f]=(values_sigma.flatten())
    values_stellar_vel_combined1[d:f]=values_stellar_vel.flatten()
    values_stellar_sigma_combined1[d:f]=values_stellar_sigma.flatten()
    
    last_step=last_step+np.size(values_flux)
